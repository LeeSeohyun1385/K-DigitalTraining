#create database sql_analyze;
use sql_analyze;

-- CREATE TABLE TB_TEMPER_DATA
-- (
--   STD_DE VARCHAR(10)
-- , AREA_CD VARCHAR(3)
-- , AVG_TEMPER DECIMAL(3, 1)
-- , MIN_TEMPER DECIMAL(3, 1)
-- , MAX_TEMPER DECIMAL(3, 1)
-- );



CREATE TABLE TB_TEMPER
(
  STD_DE VARCHAR(8)
, AREA_CD VARCHAR(3)
, AVG_TEMPER DECIMAL(3, 1)
, MIN_TEMPER DECIMAL(3, 1)
, MAX_TEMPER DECIMAL(3, 1)
, PRIMARY KEY (STD_DE, AREA_CD)
);


#SET SQL_SAFE_UPDATES = 0;
#DELETE FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

INSERT INTO TB_TEMPER
SELECT
   REPLACE(STD_DE, '-', '') AS STD_DE
 , AREA_CD
 , AVG_TEMPER
 , MIN_TEMPER
 , MAX_TEMPER
  FROM TB_TEMPER_DATA;

COMMIT;

select * from TB_TEMPER;


#SELECT COUNT(*) FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

#DELETE FROM TB_TEMPER_DATA WHERE AREA_CD IS NULL;

# 서울시의 최고 / 최저 온도 및 해당 일자 구하기

# 서울시의 역사상 최저 및 최고 온도를 구한다.

SELECT
	TEMPER_MIN_MAX_SEOUL.AREA_CD,
    MIN(TEMPER_MIN_MAX_SEOUL.MIN_TEMPER) AS MIN_TEMPER,
    MAX(TEMPER_MIN_MAX_SEOUL.MAX_TEMPER) AS MAX_TEMPER
    
FROM TB_TEMPER AS TEMPER_MIN_MAX_SEOUL
WHERE TEMPER_MIN_MAX_SEOUL.AREA_CD='108'
GROUP BY TEMPER_MIN_MAX_SEOUL.AREA_CD;

# 일자 찾기
SELECT B.AREA_CD, B.STD_DE, B.MIN_TEMPER, B.MAX_TEMPER

FROM (
	SELECT
		TEMPER_MIN_MAX_SEOUL.AREA_CD,
		MIN(TEMPER_MIN_MAX_SEOUL.MIN_TEMPER) AS MIN_TEMPER,
		MAX(TEMPER_MIN_MAX_SEOUL.MAX_TEMPER) AS MAX_TEMPER
    
	FROM TB_TEMPER AS TEMPER_MIN_MAX_SEOUL
	WHERE TEMPER_MIN_MAX_SEOUL.AREA_CD='108'
	GROUP BY TEMPER_MIN_MAX_SEOUL.AREA_CD) AS MINMAX_TEMPER
    
JOIN TB_TEMPER B ON (B.AREA_CD = MINMAX_TEMPER.AREA_CD AND
						B.MIN_TEMPER = MINMAX_TEMPER.MIN_TEMPER) OR
                        
                        (B.AREA_CD = MINMAX_TEMPER.AREA_CD AND
                         B.MAX_TEMPER = MINMAX_TEMPER.MAX_TEMPER);
                         
                         